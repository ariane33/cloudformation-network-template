AWSTemplateFormatVersion: 2010-09-09
Description:
  Deploy a new stack that will setup a Linux EC2 instance (Web server) and reference the sample network stack previously created.
Mappings: 
  RegionMap: 
    us-east-1: 
      "HVM64": "ami-033b95fb8079dc481"
    us-east-2: 
      "HVM64": "ami-0b614a5d911900a9b"  
    us-west-1: 
      "HVM64": "ami-0573b70afecda915d"
    us-west-2: 
      "HVM64": "ami-0341aeea105412b57"   
    eu-west-1: 
      "HVM64": "ami-0bf84c42e04519c85"
    eu-west-2: 
      "HVM64": "ami-0dd555eb7eb3b7c82"  
Parameters:
  VPC:
    Description: VPC to operate in
    Type: AWS::EC2::VPC::Id 
  SecurityGroupDescription:
    Description: My ssg description
    Type: String
  SecurityGroupPort1:
    Description: Simple Description of a Number Parameter, with MinValue and MaxValue
    Type: Number
    MinValue: 20 
    MaxValue: 65535
  SecurityGroupIngressCIDR1:
    Description: The IP address range that can be used to communicate to the EC2 instances
    Type: String
    MinLength: '9'
    MaxLength: '18'
    AllowedPattern: (\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})/(\d{1,2})
    ConstraintDescription: must be a valid IP CIDR range of the form x.x.x.x/x.
  SecurityGroupPort2:
    Description: Simple Description of a Number Parameter, with MinValue and MaxValue
    Type: Number
    MinValue: 20 
    MaxValue: 65535
  SecurityGroupIngressCIDR2:
    Description: The IP address range that can be used to communicate to the EC2 instances
    Type: String
    MinLength: '9'
    MaxLength: '18'
    AllowedPattern: (\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})/(\d{1,2})
    ConstraintDescription: must be a valid IP CIDR range of the form x.x.x.x/x.   
  KeyName:
    Description: Name of an existing EC2 keypair to enable SSHaccess to the instance
    Type: AWS::EC2::KeyPair::KeyName
    ConstraintDescription: must be the name of an existing EC2 KeyPair   
  SubnetIDs: 
    Description: Subnet IDs that is a list of Subnet ID
    Type: AWS::EC2::Subnet::Id  
  InstanceType:
    Description: WebServer EC2 instance type (has default, AllowedValues)
    Type: String
    AllowedValues: 
      - t1.micro
      - t2.nano
      - t2.micro
      - t2.small
    ConstraintDescription: must be a valid EC2 instance type.  
Resources:
  MyEIP:
    Type: AWS::EC2::EIP
    Properties:
      InstanceId: !Ref MyEC2Instance
  MyEC2Instance: 
    Type: AWS::EC2::Instance
    Properties: 
      ImageId: !FindInMap [RegionMap, !Ref 'AWS::Region', HVM64]
      KeyName: !Ref KeyName
      InstanceType: !Ref InstanceType
      Tags: 
        - Key: "Name"
          Value: "Linux"    
      SecurityGroupIds: 
        -  !Ref MySecurityGroup
      SubnetId: !Ref SubnetIDs
      UserData:
        Fn::Base64: |
          #!/bin/bash
          yum install httpd -y
          systemctl enable httpd
          mkdir /var/www/html/
          echo "<h1>Welcome to Ariane webserver </h1>" > /var/www/html/index.html
          systemctl start httpd
  MySecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      VpcId: !Ref VPC
      GroupDescription: !Ref SecurityGroupDescription
      SecurityGroupIngress:
      - CidrIp: !Ref SecurityGroupIngressCIDR1
        FromPort: !Ref SecurityGroupPort1
        IpProtocol: tcp
        ToPort: !Ref SecurityGroupPort1
      - CidrIp: !Ref SecurityGroupIngressCIDR2
        FromPort: !Ref SecurityGroupPort2
        IpProtocol: tcp
        ToPort: !Ref SecurityGroupPort2    
Outputs:
  PrivateIPv4:
    Description: The values of the private IPv4 address of the EC2 instance
    Value: !GetAtt MyEC2Instance.PrivateIp
  DNSName:
    Description: The values of private DNS name of the EC2 instance
    Value: !GetAtt MyEC2Instance.PrivateDnsName